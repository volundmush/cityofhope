@skip isdbref(tag(setr(1,vampstatus)))={@assert/inline isdbref(globalroom())=@pemit %#=ERROR: No master room set!;@assert/inline isdbref(setr(0,create(Vampire Status System,,t)))=@pemit %#=ERROR: Could not create code object %q1: %q0;@set %q0=INDESTRUCTIBLE !NO_COMMAND;@tag/add %q1=%q0;@tel %q0=globalroom()}

&META_AUTHOR #vampstatus=Sponge/#4
&META_PURPOSE #vampstatus=Track vampire status. Initially Camarilla but others later, potentially.
&META_UPDATED_BY #vampstatus=Sponge/#4

&DATA_POINTS_STATUS_BG #vampstatus=5
&DATA_POINTS_ACKNOWLEDGED #vampstatus=5
&UFUN_CALC_STATUS_BG #vampstatus=mul(u(#14/UFUN_GET_EFF_STAT,%0,Status),v(DATA_POINTS_STATUS_BG))
&UFUN_CALC_STATUS_CAM_ACK #vampstatus=mul(u(#14/UFUN_GET_EFF_STAT,%0,CamarillaAcknowledged),v(DATA_POINTS_ACKNOWLEDGED))
&CMND_CAM_ACKNOWLEDGE #vampstatus=$+camstat/ack *:@switch [u(UFUN_CANACK,%#)][isapproved(setr(0,whois(%0)))][u(#14/UFUN_SHEETOP,%q0,CAMARILLAACKNOWLEDGED@EEQ@0)]=0*,@pemit %#=[errstr()] [pcol(You must have the)] [argcol(SETSTATS)] [pcol(authority to acknowledge someone.)],10*,@pemit %#=[errstr()] [argcol(name(%q0))] [pcol(is not approved.)],110*,@pemit %#=[errstr()] [argcol(name(%q0))] [pcol(is already acknowledged.)],111,{@trigger #14/TRIG_SET_EFFECT=%q0,CamarillaAcknowledged,1,CANCELLED,The Prince;@pemit %#=[pcol(You have acknowledged)] [argcol(name(%q0))];@pemit %q0=[pcol(You have received status)] [argcol(Acknowledged)];@wait 1=@trigger me/TRIG_RECALC_STATUS=%q0;@wait 1=@trigger me/TRIG_RECALC_STATUS=[v(DB_PRINCE)]}
&UFUN_CALC_STATUS #vampstatus=ladd(iter(lattr(me/UFUN_CALC_STATUS_*),u(##,%0)))
&TRIG_RECALC_STATUS #vampstatus=@trig #14/TRIG_DBSET=%0,DATA_STATUS_RATING,u(UFUN_CALC_STATUS,%0)
&CMND_CAM_UNACKNOWLEDGE #vampstatus=$+camstat/unack *:@switch [hasauthority(%#,SETSTATS)][isapproved(setr(0,whois(%0)))][u(#14/UFUN_SHEETOP,%q0,CAMARILLAACKNOWLEDGED@EGT@0)]=0*,@pemit %#=[errstr()] [pcol(You must have the)] [argcol(SETSTATS)] [pcol(authority to acknowledge someone.)],10*,@pemit %#=[errstr()] [argcol(name(%q0))] [pcol(is not approved.)],110*,@pemit %#=[errstr()] [argcol(name(%q0))] [pcol(is not acknowledged.)],111,{@trigger #14/TRIG_SET_EFFECT=%q0,CamarillaAcknowledged,-1,CANCELLED,The Prince;@pemit %#=[pcol(You have unacknowledged)] [argcol(name(%q0))];@pemit %q0=[pcol(You have lost status)] [argcol(Acknowledged)];@wait 1=@trigger me/TRIG_RECALC_STATUS=%q0;@wait 1=@trigger me/TRIG_RECALC_STATUS=[v(DB_PRINCE)]}
&DB_BOON #vampstatus=#2839
@Startup #vampstatus=@drain me;@notify me
&TRIG_ADD_BOON #vampstatus=&DATA_LAST_ID [v(DB_BOON)]=setr(I,inc(get([v(DB_BOON)]/DATA_LAST_ID)));&DATA_BOON_[%qI] [v(DB_BOON)]=%0|%1|[secs()]|%2|%3;@trig #14/TRIG_SET_EFFECT=%0,STATUS_RATING,%2,1652065282,:Boon %qI:;@trig #14/TRIG_SET_EFFECT=%1,STATUS_RATING,-%2,1652065282,:Boon %qI:;@notify me
&TRIG_OFFER_BOON #vampstatus=&[u(UFUN_BOONOFFER_NAME,%0,%1)] [v(DB_BOON)]=%2|%3
&UFUN_BOON_ELIGIBLE #vampstatus=and(isapproved(%0),u(#14/UFUN_SHEETOP,%0,CamarillaAcknowledged@EGT@0))
&CMND_BOON_OFFER #vampstatus=$+boon/offer *=*/*:@switch [u(UFUN_BOON_ELIGIBLE,setr(D,whois(%#)))][u(UFUN_BOON_ELIGIBLE,setr(0,whois(%0)))][gt(setr(1,trunc(%1)),0)]=0*,@pemit %#=[errstr()] [pcol(You are not eligible for boons.)],10*,@pemit %#=[errstr()] [argcol(name(%q0))] [pcol(is not eligible for boons.)],110*,@pemit %#=[errstr()] [pcol(Boons must have a value greater than 0.)],111,{@trigger me/TRIG_OFFER_BOON=%#,%q0,%q1,%2;@pemit %q0=[argcol(name(%#))] [pcol(has offered you a boon. You will receive)] [argcol(%q1)] [pcol(status points until:)] [argcol(%2)];@pemit %#=[pcol(You have offered)] [argcol(name(%q0))] [pcol(a boon. You will give [obj(%q0)])] [argcol(%q1)] [pcol(status points until:)] [argcol(%2)]}
&TRIG_CANCEL_OFFER #vampstatus=&DATA_OFFER_[after(%0,#)]_[after(%1,#)] [v(DB_BOON)]
&CMND_BOON_CANCEL #vampstatus=$+boon/cancel *:@switch [hasattr(v(DB_BOON),u(UFUN_BOONOFFER_NAME,%#,setr(0,whois(%0))))]=0*,@pemit %#=[errstr()] [pcol(You have no boons offered to)] [argcol(name(%q0))],1,{@trig me/TRIG_CANCEL_OFFER=%#,%q0;@pemit %#=[pcol(You have cancelled you boon offer to)] [argcol(name(%q0))];@pemit %q0=[argcol(name(%#))] [pcol(has cancelled %o boon offer.)]}
&UFUN_BOONOFFER_NAME #vampstatus=DATA_OFFER_[after(%0,#)]_[after(%1,#)]
&CMND_BOON_REJECT #vampstatus=$+boon/reject *:@switch [hasattr(v(DB_BOON),u(UFUN_BOONOFFER_NAME,setr(0,whois(%0)),%#))]=0*,@pemit %#=[errstr()] [pcol(You have no boons offered by)] [argcol(name(%q0))],1,{@trig me/TRIG_CANCEL_OFFER=%q0,%#;@pemit %#=[pcol(You have rejected the boon offer from)] [argcol(name(%q0))];@pemit %q0=[argcol(name(%#))] [pcol(has rejected your boon offer.)]}
&CMND_BOON_ACCEPT #vampstatus=$+boon/accept *:@switch [hasattr(v(DB_BOON),setr(1,u(UFUN_BOONOFFER_NAME,setr(0,whois(%0)),%#)))][lte(add(u(UFUN_BOON_TALLY,%q0,%#),before(setr(1,get(v(DB_BOON)/%q1)),|)),setr(L,mul(u(#14/UFUN_GET_BASE_STAT,%#,STATUS_RATING),v(DATA_BOON_LEVERAGE))))]=0*,@pemit %#=[errstr()] [pcol(You have no boons offered by)] [argcol(name(%q0))],10*,@pemit %#=[errstr()] [pcol(You can't lend more than)] [argcol(%qL)] [pcol(status to any one kindred.)],11,{@trig me/TRIG_CANCEL_OFFER=%q0,%#;@wait me=@trig me/TRIG_ADD_BOON=%q0,%#,[first(%q1,|)],[rest(%q1,|)];@pemit %#=[pcol(You have accepted the boon offer from)] [argcol(name(%q0))];@pemit %q0=[argcol(name(%#))] [pcol(has accepted your boon offer.)]}
&UFUN_FMT_OFFER #vampstatus=[rjust(*,4)] [argcol(name(%0))] [pcol(is asking for)] [argcol(%1)] [pcol(status\, repaid when)] [argcol(%2)]
&UFUN_FMT_IOWE #vampstatus=[rjust(argcol(%0),5)]: [argcol(name(%1))] [pcol(has)] [argcol(%2)] [pcol(points of your status until)] [argcol(%3)]
&UFUN_FMT_IAMOWED #vampstatus=[rjust(argcol(%0),5)][pcol(: You have)] [argcol(%2)] [pcol(points of status from)] [argcol(name(%1))] [pcol(until)] [argcol(%3)]
&UFUN_LATTR_OFFERED #vampstatus=lattr([v(DB_BOON)]/DATA_OFFER_[after(%0,#)]_*)
&UFUN_FMT_OFFERED #vampstatus=[rjust(*,4)] [pcol(You offered to help)] [argcol(name(%0))] [pcol(for)] [argcol(%1)] [pcol(status\, repaid when)] [argcol(%2)]
&UFUN_LATTR_IOWE #vampstatus=grepi(v(DB_BOON),DATA_BOON_*,|%0|)
&UFUN_LATTR_IAMOWED #vampstatus=grepi(v(DB_BOON),DATA_BOON_*,%0|#)
&UFUN_SHOW_IAMOWED #vampstatus=[subheader(Boons owed to [argcol(name(%0))])]%r[iter(u(UFUN_LATTR_IAMOWED,%0),u(UFUN_FMT_IAMOWED,after(##,DATA_BOON_),extract(setr(0,get([v(DB_BOON)]/##)),2,1,|),extract(%q0,4,1,|),extract(%q0,5,1,|)),%b,%r)]%r
&UFUN_SHOW_IOWE #vampstatus=[subheader(Boons owed by [argcol(name(%0))])]%r[iter(u(UFUN_LATTR_IOWE,%0),u(UFUN_FMT_IOWE,after(##,DATA_BOON_),extract(setr(0,get([v(DB_BOON)]/##)),1,1,|),extract(%q0,4,1,|),extract(%q0,5,1,|)),%b,%r)]%r
&UFUN_SHOW_OFFER #vampstatus=[subheader(Boons offered to [argcol(name(%0))])]%r[iter(u(UFUN_LATTR_OFFER,%0),u(UFUN_FMT_OFFER,#[extract(##,3,1,_)],before(setr(0,get(v(DB_BOON)/##)),|),after(%q0,|)),%b,%r)]%r
&UFUN_LATTR_OFFER #vampstatus=lattr([v(DB_BOON)]/DATA_OFFER_*_[after(%0,#)])
&UFUN_SHOW_OFFERED #vampstatus=[subheader(Boons offered by [argcol(name(%0))])]%r[iter(u(UFUN_LATTR_OFFERED,%0),u(UFUN_FMT_OFFERED,#[extract(##,4,1,_)],before(setr(0,get(v(DB_BOON)/##)),|),after(%q0,|)),%b,%r)]%r
&CMND_BOONS #vampstatus=$+boons *:@switch [or(u(UFUN_BOON_ELIGIBLE,%#),hasauthority(%#,VIEWSTATS))][or(strmatch(setr(D,whois(%0)),%#),u(UFUN_CANVIEW_BOONS,%#))]=0*,@pemit %#=[errstr()] [pcol(You're not eligible for boons.)],10*,@pemit %#=[errstr()] [pcol(You must have the)] [argcol(VIEWSTATS)] [pcol(authority to view another player's boons.)],11,@pemit %#=[header(Boons for [name(%qD)])]%r[iter(STATUS OFFER OFFERED IOWE IAMOWED,ulocal(UFUN_SHOW_[##],%qD),%b,%r)][footer()]
&UFUN_SHOW_STATUS #vampstatus=%b%b[ljust(pcol(Current Base Status:),33,.)][rjust(argcol(u(#14/UFUN_GET_BASE_STAT,%0,STATUS_RATING)),3,.)]%b%b[ljust(pcol(Current Effective Status:),33,.)][rjust(argcol(u(#14/UFUN_GET_EFF_STAT,%0,STATUS_RATING)),3,.)]
&DATA_POINTS_PRINCE_ACK #vampstatus=2
&DB_PRINCE #vampstatus=#2469
&UFUN_CALC_STATUS_PRINCE_ACK #vampstatus=if(strmatch(%0,v(DB_PRINCE)),mul(words(u(#14/UFUN_MATCH_SHEETS,CamarillaAcknowledged@EGT@0)),v(DATA_POINTS_PRINCE_ACK)),0)
&DATA_BOON_LEVERAGE #vampstatus=1
&CMND_BOONS_NOARGS #vampstatus=$+boons:@force %#=+boons %#
&UFUN_BOON_VALUE #vampstatus=extract(get(v(DB_BOON)/%0),4,1,|)
&UFUN_BOON_TALLY #vampstatus=ladd(map(UFUN_BOON_VALUE,grep(v(DB_BOON),DATA_BOON_*,%0|%1|)))
&TRIG_BOON_FORGIVE #vampstatus=&DATA_BOON_[%0] [v(DB_BOON)][setq(9,get(v(DB_BOON)/DATA_BOON_%0))];@trig #14/TRIG_DBSET=[setr(A,before(%q9,|))],[grepi(get(%qA/_DATA_DBID),DATA_EFFECT_STATUS_RATING_*,:boon %0:)];@trig #14/TRIG_DBSET=[setr(A,extract(%q9,2,1,|))],[grepi(get(%qA/_DATA_DBID),DATA_EFFECT_STATUS_RATING_*,:boon %0:)]
&CMND_BOON_FORGIVE #vampstatus=$+boon/forgive *:@switch [or(strmatch(setr(0,get(v(DB_BOON)/DATA_BOON_%0)),%#|*),hasauthority(%#,SETSTATS))]=0*,@pemit %#=[errstr()] [pcol(That boon isn't yours to forgive!)],1,{@trig me/TRIG_BOON_FORGIVE=%0;@pemit %#=[pcol(You have forgiven)] [argcol(name(setr(1,extract(%q0,2,1,|))))] [pcol(of boon #)][argcol(%0)][pcol(. How magnanimous of you!)];@pemit %q1=[argcol(%N)] [pcol(has forgiven you of boon #)][argcol(%0)][pcol(. Be grateful!)]}
&DATA_POINTS_HARPY #vampstatus=20
&DATA_POINTS_PRINCE #vampstatus=25
&UFUN_CALC_STATUS_POSITION #vampstatus=ladd(iter(u(me/LIST_POSITIONS),mul(t(u(#14/UFUN_GET_EFF_STAT,%0,##)),v(DATA_POINTS_[##]))))
&LIST_CAM_ACKNOWLEDGERS #vampstatus=#3598
&UFUN_CANACK #vampstatus=corbool(member(v(LIST_CAM_ACKNOWLEDGERS),%0),hasauthority(%0,SETSTATS))
&TRIG_RECALC_CAM #vampstatus=@dolist [sort(u(#14/UFUN_MATCH_SHEETS,Faction@is@Camarilla))]=@trigger #2550/TRIG_RECALC_STATUS=##
&UFUN_CALC_STATUS_PRESTIGIOUS_SIRE #vampstatus=gt(u(#14/UFUN_GET_EFF_STAT,%0,Prestigious_Sire),0)
&UFUN_CALC_STATUS_14TH_GEN #vampstatus=if(u(#14/UFUN_GET_EFF_STAT,%0,14th_generation),-2,0)
&UFUN_CALC_STATUS_CAITIFF #vampstatus=if(u(#14/UFUN_SHEET_EXPR,%0,Clan@is@Caitiff),-1,0)
&UFUN_CALC_STATUS_PROBATION #vampstatus=if(u(#14/UFUN_SHEET_EXPR,%0,Probationary_sect_member@isnt@),-4,0)
&UFUN_CALC_STATUS_BOTCHED_PRES #vampstatus=if(u(#14/UFUN_SHEET_EXPR,%0,botched_presentation@isnt@),-1,0)
&UFUN_CALC_STATUS_SIRES_RESENT #vampstatus=if(u(#14/UFUN_SHEET_EXPR,%0,Sire's_resentment@isnt@),-1,0)
&UFUN_CANVIEW_BOONS #vampstatus=corbool(localize(u(#14/UFUN_GET_EFF_STAT,%0,Harpy)),hasauthority(%0,VIEWSTATS))
&TRIG_RECALC_SAB #vampstatus=@dolist [sort(u(#14/UFUN_MATCH_SHEETS,Faction@is@Sabbat))]=@trigger #2550/TRIG_RECALC_STATUS=##
&UFUN_CALC_STATUS_PANDER #vampstatus=if(u(#14/UFUN_SHEET_EXPR,%0,Clan@is@Pander),-1,0)
&UFUN_CALC_STATUS_SABBAT_GHOUL #vampstatus=if(u(#14/UFUN_SHEET_EXPR,%0,Faction@is@Sabbat&&Race@isnt@Vampire),-5,0)
&LIST_POSITIONS_CAM #vampstatus=PRINCE SENESCHAL PRIMOGEN SHERIFF HARPY WHIP MYRMIDON SCRIBE
&LIST_POSITIONS_SAB #vampstatus=ARCHBISHOP BISHOP DUCTUS PRIEST
&LIST_POSITIONS #vampstatus=iter(lattr(me/LIST_POSITIONS_*),v(##))
&DATA_POINTS_SENESCHAL #vampstatus=20
&DATA_POINTS_PRIMOGEN #vampstatus=20
&DATA_POINTS_WHIP #vampstatus=10
&DATA_POINTS_MYRMIDON #vampstatus=5
&DATA_POINTS_SCRIBE #vampstatus=5
&DATA_POINTS_ARCHBISHOP #vampstatus=25
&DATA_POINTS_BISHOP #vampstatus=20
&DATA_POINTS_DUCTUS #vampstatus=10
&DATA_POINTS_PRIEST #vampstatus=5
&LIST_UNRATED_POSITIONS_CAM #vampstatus=KEEPER SCOURGE ABBOT ALASTOR CHANCELLOR
&DATA_POINTS_SHERIFF #vampstatus=15